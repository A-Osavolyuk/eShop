@page "/profile/change-personal-data"
@inherits PageBase

@inject IAuthenticationService AuthService
@inject IProfileService ProfileService
@inject PersonalDataValidator Validator

<Title Text="Change personal data"/>

<AuthorizeView Roles="User">
    <Authorized>
        <MudGrid Justify="Justify.Center">
            <MudItem xs="4">
                <MudPaper Outlined Class="pa-5 position-relative">
                    <MudGrid>
                        <MudIconButton Class="position-absolute" Style="top:15px; left:5%"
                                       @onclick="@(() => NavigationManager.NavigateTo("/profile"))"
                                       Icon="@Icons.Material.Filled.ArrowBack"/>
                        <MudItem xs="12" Class="m-auto">
                            <MudText Align="Align.Center" Typo="Typo.h6"> Change personal data</MudText>
                        </MudItem>
                    </MudGrid>
                    <MudGrid Justify="Justify.Center">
                        <MudItem xs="12">
                            <EditForm Context="formcontext" Model="request" FormName="change-personal-data-form"
                                      OnValidSubmit="OnValidSubmit">
                                <FluentValidationValidator Validator="Validator"/>
                                <MudTextField Immediate Clearable Counter="32" MaxLength="32"
                                              For="@(() => request.FirstName)" Label="First name"
                                              @bind-Value="request.FirstName" Variant="Variant.Outlined"/>
                                <MudTextField Immediate Clearable Counter="32" MaxLength="32"
                                              For="@(() => request.LastName)" Label="Last name"
                                              @bind-Value="request.LastName" Variant="Variant.Outlined"/>
                                <MudTextField Immediate Clearable Counter="32" MaxLength="32"
                                              For="@(() => request.Gender)" Label="Gender" @bind-Value="request.Gender"
                                              Variant="Variant.Outlined"/>
                                <MudDatePicker @ref="datePicker" For="@(() => request.DateOfBirth)"
                                               Label="Date of birth" @bind-Date="request.DateOfBirth"
                                               Variant="Variant.Outlined"/>
                                <MudButton Class="mt-3" Variant="Variant.Filled" ButtonType="ButtonType.Submit"
                                           Color="Color.Success" EndIcon="@Icons.Material.Filled.Save">Save changes
                                </MudButton>
                            </EditForm>
                        </MudItem>
                    </MudGrid>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </Authorized>
    <NotAuthorized>
        <AuthenticationManager/>
    </NotAuthorized>
</AuthorizeView>

@code {
    private ChangePersonalDataRequest request = new();
    private MudDatePicker datePicker = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var user = await UserStorage.GetUserAsync();
            var personalData = user!.PersonalData;

            request = new ChangePersonalDataRequest()
            {
                FirstName = personalData.FirstName,
                LastName = personalData.LastName,
                DateOfBirth = personalData.BirthDate,
                Gender = personalData.Gender,
                Email = user.AccountData.Email
            };

            StateHasChanged();
        }
    }

    private async Task OnValidSubmit()
    {
        var response = await ProfileService.ChangePersonalDataAsync(request);

        if (response.Success)
        {
            var data = JsonConvert.DeserializeObject<ChangePersonalDataResponse>(response.Result!.ToString()!);
            //TODO: personal data reload
            //await LocalDataAccessor.WritePersonalDataAsync(PersonalDataMapper.ToPersonalDataModel(data!));
            NavigationManager.NavigateTo("/account/profile", true);
            Snackbar.Add(response.Message, MudBlazor.Severity.Success);
        }
        else
        {
            Snackbar.Add(response.Message, MudBlazor.Severity.Error);
        }
    }

}
