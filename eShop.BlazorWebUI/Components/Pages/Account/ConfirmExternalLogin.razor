@page "/account/confirm-external-login/"

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar

@code {
    [SupplyParameterFromQuery(Name = "accessToken")] public string AccessToken { get; set; } = string.Empty;
    [SupplyParameterFromQuery(Name = "refreshToken")] public string RefreshToken { get; set; } = string.Empty;
    [SupplyParameterFromQuery(Name = "returnUri")] public string ReturnUri { get; set; } = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await (AuthenticationStateProvider as ApplicationAuthenticationStateProvider)!.LoginAsync(AccessToken, RefreshToken);
        NavigationManager.NavigateTo((string.IsNullOrEmpty(ReturnUri) ? "/products" : ReturnUri));

        Snackbar.Add("Successfully logged in.", MudBlazor.Severity.Success);
    }
}
