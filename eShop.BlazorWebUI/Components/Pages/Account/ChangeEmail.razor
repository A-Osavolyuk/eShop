@page "/account/change-email/"
@using eShop.Domain.Requests.Auth

@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authenticationState
@inject ITokenProvider tokenProvider
@inject ISnackbar Snackbar

@code {
    private ConfirmChangeEmailRequest Request { get; set; } = new();

    [SupplyParameterFromQuery(Name = "currentEmail")] public string CurrentEmail { get; set; } = string.Empty;
    [SupplyParameterFromQuery(Name = "newEmail")] public string NewEmail { get; set; } = string.Empty;
    [SupplyParameterFromQuery(Name = "token")] public string Token { get; set; } = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Request = new()
        {
            CurrentEmail = CurrentEmail,
            NewEmail = NewEmail,
            Token = Token
        };

        var result = await AuthenticationService.ConfirmChangeEmailAsync(Request);

        if (result.IsSucceeded)
        {
            await (authenticationState as ApplicationAuthenticationStateProvider)!.LogOutAsync();
            Snackbar.Add(result.ResultMessage, MudBlazor.Severity.Success);
            NavigationManager.NavigateTo("/account/login");
        }
        else
        {
            Snackbar.Add(result.ErrorMessage, MudBlazor.Severity.Error);
            NavigationManager.NavigateTo("/profile");
        }
    }
}
