@page "/account/change-phone-number/"
@using eShop.Domain.Requests.AuthApi.Auth
@using eShop.Domain.Responses.AuthApi.Auth

@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ITokenProvider tokenProvider
@inject ISnackbar Snackbar

@code {
    private ConfirmChangePhoneNumberRequest ConfirmChangePhoneNumberRequest { get; set; } = new();

    [SupplyParameterFromQuery(Name = "token")] public string Token { get; set; } = string.Empty;
    [SupplyParameterFromQuery(Name = "email")] public string Email { get; set; } = string.Empty;
    [SupplyParameterFromQuery(Name = "phonenumber")] public string PhoneNumber { get; set; } = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        ConfirmChangePhoneNumberRequest = new()
        {
            Email = Email,
            PhoneNumber = PhoneNumber,
            Token = Token
        };

        var result = await AuthenticationService.ConfirmChangePhoneNumberAsync(ConfirmChangePhoneNumberRequest);

        if (result.Success)
        {
            var data = JsonConvert.DeserializeObject<ChangeUserNameResponse>(result.Result!.ToString()!);
            await (AuthenticationStateProvider as ApplicationAuthenticationStateProvider)!.UpdateAuthenticationState(data!.RefreshToken);
            Snackbar.Add(result.Message, MudBlazor.Severity.Success);
            NavigationManager.NavigateTo("/account/profile");
        }
        else
        {
            Snackbar.Add(result.Message, MudBlazor.Severity.Error);
            NavigationManager.NavigateTo("/account/profile");
        }
    }
}
