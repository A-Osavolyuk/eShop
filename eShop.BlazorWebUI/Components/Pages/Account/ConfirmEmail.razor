@page "/account/confirm-email/"

@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService
@inject ISnackbar SnackBar

@code {
    private ResponseDTO Result { get; set; } = new();

    [SupplyParameterFromQuery(Name = "token")] public string Token { get; set; } = string.Empty;
    [SupplyParameterFromQuery(Name = "email")] public string Email { get; set; } = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Result = await AuthenticationService.ConfirmEmailAsync(new ConfirmEmailRequest() { Token = Token, Email = Email });

        if (Result.IsSucceeded)
        {
            NavigationManager.NavigateTo("/account/login");
            SnackBar.Add(Result.ResultMessage, MudBlazor.Severity.Success);

        }
        else
        {
            NavigationManager.NavigateTo("/account/failed-email-confirmation");
            SnackBar.Add(Result.ResultMessage, MudBlazor.Severity.Error);
        }
    }
}
