@page "/account/reset-password"
@inherits PageBase

@inject IValidator<ForgotPasswordRequest> ForgotPasswordValidator
@inject IValidator<ConfirmResetPasswordRequest> ConfirmResetPasswordValidator
@inject IAuthenticationService AuthenticationService

<Title Text="Reset password"/>

<MudGrid Justify="Justify.Center" Style="height: 80vh">
    <MudItem xs="8" Style="margin: auto">
        <MudStepperExtended @ref="stepper" Color="Color.Primary" Variant="Variant.Filled"
                            HeaderTextView="HeaderTextView.All" HeaderBadgeView="HeaderBadgeView.All"
                            ShowNextButton="false" ShowPreviousButton="false" ShowSkipButton="false">
            <ChildContent>
                <MudStepExtended Order="0" Icon="@Icons.Material.Filled.Edit" Title="Request">
                    <ChildContent>
                        <MudGrid Justify="Justify.Center">
                            <MudItem xs="6">
                                <MudPaper Style="margin-bottom: 10px" Outlined Class="pa-3">
                                    <MudText Align="Align.Center" Typo="Typo.h4">
                                        Password reset
                                    </MudText>
                                </MudPaper>
                                <MudPaper Outlined Class="pa-3">
                                    <EditForm Model="forgotPasswordRequest" FormName="forgot-password-form"
                                              OnValidSubmit="@(async () => await OnSendSubmit())">
                                        <FluentValidationValidator Validator="ForgotPasswordValidator"/>
                                        <MudGrid Spacing="1" Justify="Justify.Center">
                                            <MudItem xs="12">
                                                <MudText Align="Align.Center" Typo="Typo.body1">
                                                    To reset your password, please enter your email address
                                                    you indicated during registration. We will the send letter with
                                                    6-digit code and instruction what to do the next steps
                                                </MudText>
                                                <br/>
                                                <MudTextField Label="Email" For="@(() => forgotPasswordRequest.Email)"
                                                              Variant="Variant.Outlined"
                                                              @bind-Value="forgotPasswordRequest.Email"/>
                                            </MudItem>
                                            <MudItem xs="12">
                                                <MudButton Size="Size.Large" FullWidth Variant="Variant.Filled"
                                                           Color="Color.Primary"
                                                           ButtonType="ButtonType.Submit">Send code
                                                </MudButton>
                                            </MudItem>
                                        </MudGrid>
                                    </EditForm>
                                </MudPaper>
                            </MudItem>
                        </MudGrid>
                    </ChildContent>
                </MudStepExtended>
                <MudStepExtended Order="1" Icon="@Icons.Material.Filled.ConfirmationNumber" Title="Confirmation">
                    <ChildContent>
                        <MudGrid Justify="Justify.Center">
                            <MudItem xs="6">
                                <MudPaper Style="margin-bottom: 10px" Outlined Class="pa-3">
                                    <MudText Align="Align.Center" Typo="Typo.h4">
                                        Confirm reset
                                    </MudText>
                                </MudPaper>
                                <MudPaper Outlined Class="pa-3">
                                    <EditForm Model="forgotPasswordRequest" FormName="forgot-password-form"
                                              OnValidSubmit="@(async () => await OnConfirmSubmit())">
                                        <MudGrid Spacing="1" Justify="Justify.Center">
                                            <MudItem xs="12">
                                                <MudText Align="Align.Center" Typo="Typo.body1">
                                                    To confirm your password reset, please enter the 6-digit code from
                                                    letter we sent you to: <strong>@forgotPasswordRequest.Email</strong>
                                                </MudText>
                                            </MudItem>
                                            <MudItem xs="7">
                                                <MudCodeInput Count="6" Margin="Margin.Normal" Spacing="1"
                                                              @bind-Value="confirmResetPasswordRequest.Code"
                                                              Variant="Variant.Outlined"/>
                                            </MudItem>
                                            <MudItem xs="12">
                                                <MudButton Size="Size.Large" FullWidth Variant="Variant.Filled"
                                                           Color="Color.Primary"
                                                           ButtonType="ButtonType.Submit">Confirm
                                                </MudButton>
                                            </MudItem>
                                        </MudGrid>
                                    </EditForm>
                                </MudPaper>
                            </MudItem>
                        </MudGrid>
                    </ChildContent>
                </MudStepExtended>
                <MudStepExtended Order="2" Icon="@Icons.Material.Filled.Save" Title="Reset">
                    <ChildContent>
                        <MudGrid Justify="Justify.Center">
                            <MudItem xs="6">
                                <MudPaper Style="margin-bottom: 10px" Outlined Class="pa-3">
                                    <MudText Align="Align.Center" Typo="Typo.h4">
                                        New password
                                    </MudText>
                                </MudPaper>
                                <MudPaper Outlined Class="pa-3">
                                    <EditForm Model="confirmResetPasswordRequest" FormName="forgot-password-form"
                                              OnValidSubmit="@(async () => await OnResetPasswordSubmit())">
                                        <FluentValidationValidator Validator="ConfirmResetPasswordValidator"/>
                                        <MudGrid Spacing="1" Justify="Justify.Center">
                                            <MudItem xs="12">
                                                <MudText Align="Align.Center" Typo="Typo.body1">
                                                    To complete password reset, please enter new password and confirm it
                                                    in the field below
                                                </MudText>
                                                <br/>
                                                <MudTextField Label="New password"
                                                              For="@(() => confirmResetPasswordRequest.NewPassword)"
                                                              Variant="Variant.Outlined"
                                                              @bind-Value="confirmResetPasswordRequest.NewPassword"/>
                                                <MudTextField Label="Confirm new password"
                                                              For="@(() => confirmResetPasswordRequest.ConfirmNewPassword)"
                                                              Variant="Variant.Outlined"
                                                              @bind-Value="confirmResetPasswordRequest.ConfirmNewPassword"/>
                                            </MudItem>
                                            <MudItem xs="12">
                                                <MudButton Size="Size.Large" FullWidth Variant="Variant.Filled"
                                                           Color="Color.Primary"
                                                           ButtonType="ButtonType.Submit">Reset password
                                                </MudButton>
                                            </MudItem>
                                        </MudGrid>
                                    </EditForm>
                                </MudPaper>
                            </MudItem>
                        </MudGrid>
                    </ChildContent>
                </MudStepExtended>
            </ChildContent>
        </MudStepperExtended>
    </MudItem>
</MudGrid>

@code {
    private ForgotPasswordRequest forgotPasswordRequest = new();
    private ConfirmResetPasswordRequest confirmResetPasswordRequest = new();
    private MudStepperExtended? stepper = new();

    private async Task OnSendSubmit()
    {
        var result = await AuthenticationService.RequestResetPasswordAsync(new() { Email = forgotPasswordRequest.Email });

        if (result.Success)
        {
            Snackbar.Add(result.Message, MudBlazor.Severity.Success);
            await StepNextAsync();
        }

        Snackbar.Add(result.Message, MudBlazor.Severity.Error);
    }

    private async Task OnConfirmSubmit()
    {
        await StepNextAsync();
    }

    private async Task OnResetPasswordSubmit()
    {
        var result = await AuthenticationService.ConfirmResetPasswordAsync(new() { Email = forgotPasswordRequest.Email });

        if (result.Success)
        {
            Snackbar.Add(result.Message, MudBlazor.Severity.Success);
            NavigationManager.NavigateTo("account/login");
        }

        Snackbar.Add(result.Message, MudBlazor.Severity.Error);
    }

    private async Task StepNextAsync()
    {
        var index = stepper!.GetActiveIndex();
        await stepper!.CompleteStep(stepper.GetActiveIndex());
    }

}
