@page "/shop/user-cart/{UserId:guid}"

@inject ICartService CartService
@inject ILocalDataAccessor LocalDataAccessor
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<AuthorizeView>
    <Authorized>
        @if (UserCart is null)
        {
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12">
                    <MudProgressCircular Color="Color.Primary" />
                    <MudText Inline Typo="Typo.h4">Loading your cart. Please wait</MudText>
                </MudItem>
            </MudGrid>
        }
        else
        {
            if (UserCart.GoodsCount > 0)
            {
                <MudGrid Justify="Justify.Center">
                    <MudItem xs="12">
                        <MudText Inline Typo="Typo.h4">Goods count: @UserCart.GoodsCount</MudText>
                    </MudItem>
                </MudGrid>
            }
            else
            {
                <MudGrid Justify="Justify.Center">
                    <MudItem xs="12">
                        <MudText Inline Typo="Typo.h4">Your cart is empty</MudText>
                    </MudItem>
                </MudGrid>
            }
        }
    </Authorized>
    <NotAuthorized>
        <AuthenticationManager />
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter] public Guid UserId { get; set; }
    private CartDTO? UserCart;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var userId = await LocalDataAccessor.GetUserIdAsync();
            await GetCartAsync();
        }

        StateHasChanged();
    }

    private async Task GetCartAsync()
    {
        var userId = await LocalDataAccessor.GetUserIdAsync();
        var response = await CartService.GetCartByUserIdAsync(Guid.Parse(userId));

        if (response.IsSucceeded)
        {
            var data = JsonConvert.DeserializeObject<CartDTO>(response.Result.ToString()!);
            UserCart = data;
        }
        else
        {
            Snackbar.Add(response.ErrorMessage, MudBlazor.Severity.Error);
        }
    }
}
