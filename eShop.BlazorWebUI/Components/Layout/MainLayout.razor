@inherits LayoutComponentBase

@inject IAuthenticationService authenticationService
@inject NavigationManager navigationManger

<MudThemeProvider IsDarkMode/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <AuthorizeView>
            <NotAuthorized>
                <MudButton StartIcon="@Icons.Material.Filled.Login" Color="Color.Primary" Href="/account/login">Log In</MudButton>
                <MudButton StartIcon="@Icons.Material.Filled.AppRegistration" Color="Color.Primary" Href="/account/register">Register</MudButton>
            </NotAuthorized>
            <Authorized>
                <MudText Typo="Typo.body2">@context.User.Identity.Name</MudText>
                <MudButton StartIcon="@Icons.Material.Filled.Logout" Color="Color.Primary" OnClick="LogoutClick">Log Out</MudButton>
            </Authorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="py-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task LogoutClick()
    {
        await authenticationService.LogOutAsync();
        navigationManger.NavigateTo("/account/login");
    }
}
